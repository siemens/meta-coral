#
# Copyright (c) Siemens AG, 2022
#
# Authors:
#  Felix Moessbauer <felix.moessbauer@siemens.com>
#
# This file is subject to the terms and conditions of the MIT License.
# See COPYING.MIT file in the top-level directory.
#

stages:
  - prepare
  - build

variables:
  SSTATE_LOCATION: "${RUNNER_SSTATE}/${CI_PROJECT_NAME}"
  SSTATE_MIRRORS: "file://.* ${SSTATE_LOCATION}/PATH;downloadfilename=PATH"
  SSTATE_MAX_AGE: "3d"

.kas-build:
  stage: build
  image: ghcr.io/siemens/kas/kas-isar:3.0.2
  tags: [privileged]
  variables:
    KAS_TASK: "build"
  before_script:
   - echo "=== Clean sstate at ${SSTATE_LOCATION} ==="
   - kas checkout kas/meta-coral.yml
   - ./isar/scripts/isar-sstate clean "${SSTATE_LOCATION}" --max-age "${SSTATE_MAX_AGE}"
  after_script:
   - find build/tmp/deploy/isar-apt -name *.deb
   - cp -r build/tmp/deploy/isar-apt/debian-bullseye-*/apt/debian-bullseye/dists .
   - cp -r build/tmp/deploy/isar-apt/debian-bullseye-*/apt/debian-bullseye/pool .
   - echo "=== Upload sstate artifacts to ${SSTATE_LOCATION} ==="
   - ./isar/scripts/isar-sstate upload "build/sstate-cache" "${SSTATE_LOCATION}"
   - ./isar/scripts/isar-sstate info -v "${SSTATE_LOCATION}"

  artifacts:
    name: "kas-build-$CI_JOB_NAME"
    paths:
     - build/tmp/work/*/*/*/temp
     - dists
     - pool
    expire_in: 1 day
    when: always

######## Build jobs ########

reuse-compliant:
  stage: prepare
  image: python:latest
  tags: [DOCKER, AWS]
  variables:
    http_proxy: $CODE_PROXY
    https_proxy: $CODE_PROXY
    no_proxy: 127.0.0.1,localhost,.siemens.de,.siemens.net,.siemens.com,.siemens.io,s3.dualstack.eu-central-1.amazonaws.com
  before_script:
    - python3 -m venv ../venv
    - . ../venv/bin/activate
    - pip3 install reuse
    - git clean -f -d
  script:
    - reuse lint
    - reuse spdx --output SBOM.spdx
  artifacts:
    name: "meta-coral-sbom"
    paths:
     - SBOM.spdx

meta-coral-amd64:
  extends:
    - .kas-build
  script:
   - kas build kas/meta-coral.yml

meta-coral-amd64-fulltf:
  extends:
    - .kas-build
  script:
   - kas build kas/meta-coral.yml:kas/opt/full-tensorflow.yml

meta-coral-aarch64:
  extends:
    - .kas-build
  script:
    - kas build kas/meta-coral.yml:kas/opt/aarch64-target.yml
